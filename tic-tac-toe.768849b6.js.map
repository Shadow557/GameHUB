{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,O,W,O,C,G,E,E,O,C,kB,W,O,C,G,E,E,O,C,oB,W,O,C,GCMO,IAAM,EAAO,CAKjB,SAAU,CACP,SAAU,QACV,SAAU,KACV,MAAO,KACP,WAAY,mBACZ,UAAW,mBACX,SAAU,KACV,aAAc,KACd,UAAW,EACX,aAAc,EACd,KAAM,EACN,OAAQ,EACR,MAAO,EACP,YAAa,CAChB,EAMA,QAAS,CACN,KAAM,UACN,YAAa,wCACb,QAAS,OACZ,EAKA,GAAI,CACD,OAAQ,iBACR,QAAS,0BACT,UAAW,wBACX,cAAe,8CACf,aAAc,gCACd,SAAU,8BACb,EAOA,SAAU,CACP,MAAO,QACP,WAAY,CAAC,UAAW,UAAU,CAClC,cAAe,CAAC,UAAW,UAAU,CACrC,gBAAiB,CAAC,UAAW,UAAU,AAC1C,EAQA,SAAU,CACP,GAAI,CAAE,SAAU,YAAa,KAAM,CAAE,EACrC,UAAW,CACR,CACG,KAAM,cACN,KAAM,sBACN,KAAM,CACH,GAAI,cACJ,YAAa,gCAChB,CACH,EACA,CACG,KAAM,OACN,KAAM,qBACN,KAAM,CACH,GAAI,OACJ,YACG,gFACN,CACH,EACA,CACG,KAAM,cACN,KAAM,qBACN,KAAM,CACH,GAAI,cACJ,YACG,4FACN,CACH,EACA,CACG,KAAM,QACN,KAAM,qBACN,KAAM,CACH,GAAI,QACJ,YACG,+EACN,CACH,EACA,CACG,KAAM,SACN,KAAM,qBACN,KAAM,CACH,GAAI,SACJ,YACG,gKACN,CACH,EACA,CACG,KAAM,Y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","sources":["<anon>","Scripts/model.js","Scripts/mainDisplays/displayTemp.js","Scripts/games/tic-tac-toe/main.js","Scripts/games/tic-tac-toe/Displays/displaySubmenu.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire658c\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire658c\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"3eicb\", function(module, exports) {\n\n$parcel$export(module.exports, \"data\", function () { return $25a0cb294ecc0d9a$export$4051a07651545597; });\n$parcel$export(module.exports, \"setCurrentIndex\", function () { return $25a0cb294ecc0d9a$export$3ca1b55487bbd24f; });\n$parcel$export(module.exports, \"getByCurrentIndex\", function () { return $25a0cb294ecc0d9a$export$abf42a563be0e624; });\n/**\r\n * @author Shadow Shining\r\n * @version 1.0.0\r\n * @descrizione Modello dei dati per l'applicazione GameHUB.\r\n * Questo modello contiene tutte le informazioni necessarie per gestire l'account utente, le impostazioni del sito web, i dati dei giochi e altre informazioni rilevanti.\r\n */ const $25a0cb294ecc0d9a$export$4051a07651545597 = {\n    /**\r\n    * @description Dati dell'utente\r\n    * Inizializzati con i valori predefiniti per un utente ospite.\r\n    */ userData: {\n        username: \"Guest\",\n        password: null,\n        email: null,\n        firstLogin: \"2023-10-01,12:00\",\n        lastLogin: \"2023-10-01,12:00\",\n        lastGame: null,\n        lastGameData: null,\n        totalTime: 0,\n        achievements: 0,\n        wins: 0,\n        losses: 0,\n        games: 0,\n        currentPage: 0\n    },\n    /**\r\n    * @description Dati del sito web\r\n    * Inizializzati con i valori NON-modificabili per il sito web GameHUB.\r\n    */ website: {\n        name: \"GameHUB\",\n        description: \"A game hub for all your gaming needs.\",\n        version: \"1.0.0\"\n    },\n    /**\r\n    * @description Dati miei presenti nel sito web\r\n    */ me: {\n        myName: \"Shadow Shining\",\n        myEmail: \"craftiaentity@gmail.com\",\n        myWebsite: \"(maybe in the future)\",\n        myDescription: \"A dude who doesn't know what to do in life.\",\n        myAvatarPath: \"../Pictures/ShadowShining.png\",\n        myGitHub: \"https://github.com/Shadow557\"\n    },\n    /**\r\n    * @description Impostazioni del sito web\r\n    * Inizializzate con i valori predefiniti per il tema, i colori del titolo, del sottotitolo e dello sfondo.\r\n    * Queste impostazioni possono essere modificate dall'utente.\r\n    */ settings: {\n        theme: \"light\",\n        titleColor: [\n            \"#ff0000\",\n            \"#000000\"\n        ],\n        subtitleColor: [\n            \"#000000\",\n            \"#ff0000\"\n        ],\n        backgroundColor: [\n            \"#ffffff\",\n            \"#777777\"\n        ]\n    },\n    /**\r\n    * @description Dati dei giochi\r\n    * Suddivisi in minigiochi e giochi completi.\r\n    * I minigiochi sono giochi semplici e veloci, mentre i giochi completi sono giochi pi√π complessi e impegnativi.\r\n    * Entrambi i tipi di giochi hanno i dati all'interno di un proprio oggetto presente nei due array.\r\n    */ allGames: {\n        id: {\n            category: \"minigames\",\n            game: 0\n        },\n        minigames: [\n            {\n                name: \"Tic Tac Toe\",\n                icon: \"/Pictures/Guest.png\",\n                data: {\n                    id: \"tic-tac-toe\",\n                    description: \"A classic game of Tic Tac Toe.\"\n                }\n            },\n            {\n                name: \"2048\",\n                icon: \"Pictures/Guest.png\",\n                data: {\n                    id: \"2048\",\n                    description: \"A sliding puzzle game where the goal is to combine tiles with the same number.\"\n                }\n            },\n            {\n                name: \"Minesweeper\",\n                icon: \"Pictures/Guest.png\",\n                data: {\n                    id: \"minesweeper\",\n                    description: \"A classic puzzle game where the goal is to clear a minefield without detonating any mines.\"\n                }\n            },\n            {\n                name: \"Snake\",\n                icon: \"Pictures/Guest.png\",\n                data: {\n                    id: \"snake\",\n                    description: \"A classic arcade game where the player controls a snake that grows in length.\"\n                }\n            },\n            {\n                name: \"Sudoku\",\n                icon: \"Pictures/Guest.png\",\n                data: {\n                    id: \"sudoku\",\n                    description: \"A logic-based number placement puzzle where the goal is to fill a grid with numbers so that each column, row, and subgrid contains all the digits from 1 to 9.\"\n                }\n            },\n            {\n                name: \"Solitaire\",\n                icon: \"Pictures/Guest.png\",\n                data: {\n                    id: \"solitaire\",\n                    description: \"A card game where the goal is to move all cards to foundation piles in a specific order.\"\n                }\n            }\n        ],\n        games: []\n    }\n};\nconst $25a0cb294ecc0d9a$export$3ca1b55487bbd24f = (index)=>{\n    if (index < 0) {\n        $25a0cb294ecc0d9a$export$4051a07651545597.allGames.id.game = $25a0cb294ecc0d9a$export$4051a07651545597.allGames.minigames.length - 1; // Reset to last game if index is out of bounds\n        return;\n    } else if (index >= $25a0cb294ecc0d9a$export$4051a07651545597.allGames.minigames.length) {\n        $25a0cb294ecc0d9a$export$4051a07651545597.allGames.id.game = 0; // Reset to first game if index is out of bounds\n        return;\n    }\n    $25a0cb294ecc0d9a$export$4051a07651545597.allGames.id.game = index;\n};\nconst $25a0cb294ecc0d9a$export$abf42a563be0e624 = ()=>{\n    const category = $25a0cb294ecc0d9a$export$4051a07651545597.allGames.id.category;\n    const game = $25a0cb294ecc0d9a$export$4051a07651545597.allGames.id.game;\n    // console.log(game, category); // DEBUG\n    // console.log(gameArr[0]); // DEBUG\n    return $25a0cb294ecc0d9a$export$4051a07651545597.allGames[category][game];\n};\n\n});\n\nparcelRegister(\"eqyEW\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $a80e6109b74e40fd$export$2e2bcd8739ae039; });\n/**\r\n * @author Gabriele Papa Benigno\r\n * @description Classe base per la visualizzazione dei dati.\r\n * @returns {Display} - Un'istanza della classe Display.\r\n */ class $a80e6109b74e40fd$export$2e2bcd8739ae039 {\n    _data;\n    /**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Crea un'istanza di Display.\r\n\t * @param {Array} data - I dati da visualizzare nella schermata.\r\n\t * @param {Booean} render - Se true, renderizza i dati nella schermata, altrimenti restituisce il markup generato.\r\n\t * @returns {void}\r\n\t */ render(data, render = true) {\n        // console.log(data.username); // DEBUG\n        // Controlla se i dati sono validi\n        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();\n        // console.log(data); // DEBUG\n        // Aggiorna i dati della schermata e genera il markup\n        this._data = data;\n        const markup = this._generateMarkup();\n        // Se render √® false, restituisce il markup generato senza modificarlo nella schermata\n        if (!render) return markup;\n        // Altrimenti, pulisce il contenuto del parentElement e inserisce il nuovo markup\n        this._clear();\n        // console.log(this._parentElement);\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n        // console.log(this);\n        // console.log(this._parentElement.innerHTML.classList);\n        this._parentElement.classList.remove(\"hidden\");\n    }\n    /**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Crea il markup HTML da visualizzare nella schermata senza l'uso di dati.\r\n\t * @param {String} markup - Il markup HTML da inserire nel parentElement.\r\n\t * @param {Boolean0} render - Se true, renderizza il markup nella schermata, altrimenti termina senza fare nulla.\r\n\t * @returns {void}\r\n\t */ renderFromMarkup(markup, render = true) {\n        // Controlla se il markup √® valido\n        // Se il markup √® vuoto o non valido, mostra un messaggio di errore\n        if (!markup || markup.length === 0) return this.renderError();\n        // Svuota il contenuto del parentElement e inserisce il nuovo markup\n        this._clear();\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n        // Se render √® false, termina senza fare nulla\n        if (!render) return;\n        // Altrimenti, mostra il parentElement\n        this._parentElement.classList.remove(\"hidden\");\n    }\n    /**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description: Aggiorna i dati visualizzati nella schermata:\r\n\t * 1) I dati presenti nella schermata vengono aggiornati.\r\n\t * 2) Viene creato un nuovo Markup.\r\n\t * 3) Viene generato un nuovo DOM virtuale.\r\n\t * 4) Vengono raccolti in due array gli elementi del nuovo DOM virtuale + quelli di quello attuale.\r\n\t * 5) Attraverso un forEach viene fatto un controllo sugli elementi presenti negli array, se uno presente nell'array 'vecchio' non cambacia con quello aggiornato, esso viene sovrascritto, sia che sia soltanto il testo, sia che siano i suoi attributi.\r\n\t * @param {Array} data - I dati nuovi che andranno aggiornati sulla schermata.\r\n\t * @returns {void}\r\n\t */ update(data) {\n        // Controlla se i dati sono validi\n        // Se i dati sono vuoti o non validi, mostra un messaggio di errore\n        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();\n        // aggiorna i dati della schermata e genera il nuovo markup\n        this._data = data;\n        const newMarkup = this._generateMarkup();\n        // Crea un nuovo DOM virtuale e raccoglie gli elementi\n        // presenti nel nuovo markup e in quello attuale\n        const newDOM = document.createRange().createContextualFragment(newMarkup);\n        const newElements = Array.from(newDOM.querySelectorAll(\"*\"));\n        const curElements = Array.from(this._parentElement.querySelectorAll(\"*\"));\n        // per ogni elemento nel nuovo DOM virtuale,\n        // controlla se √® diverso da quello attuale\n        // se √® diverso, aggiorna il testo e gli attributi dell'elemento attuale\n        // altrimenti non fa nulla\n        newElements.forEach((newEl, i)=>{\n            const curEl = curElements[i];\n            if (!newEl.isEqualNode(curEl) && newEl.firstChild?.nodeValue.trim() !== \"\") curEl.textContent = newEl.textContent;\n            if (!newEl.isEqualNode(curEl)) Array.from(newEl.attributes).forEach((attr)=>curEl.setAttribute(attr.name, attr.value));\n        });\n    }\n    /**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Pulisce il contenuto del parentElement e mostra un messaggio di errore.\r\n\t * @param {String} message - Il messaggio di errore da visualizzare.\r\n\t * @return {void}\r\n\t */ renderError(message = this._errorMessage) {\n        const markup = `\n      <div class=\"error\">\n        <h2>Error</h2>\n        <p>${message}</p>\n      </div>`;\n        this._parentElement.innerHTML = \"\";\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n    /**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Pulisce il contenuto del parentElement.\r\n\t * @returns {void}\r\n\t */ _clear() {\n        this._parentElement.innerHTML = \"\";\n    }\n}\n\n});\n\n\nvar $3eicb = parcelRequire(\"3eicb\");\n\nvar $eqyEW = parcelRequire(\"eqyEW\");\nclass $ad3ba75a30606f04$var$displaySubmenu extends (0, $eqyEW.default) {\n    _parentElement = document.querySelector(\"#gameZone\");\n    _errorMessage = \"My info are not available. Sorry.\";\n    /**\r\n    * @author Gabriele Papa Benigno\r\n    * @description Crea il markup per visualizzare le informazioni che MI riguardano.\r\n    * @returns {String} - Il markup HTML generato.\r\n    */ _generateMarkup() {\n        return `\n            <div id=\"submenu\">\n               <h1 class=\"subtitle2\">Tic-Tac-Toe</h1>\n               <div class=\"btn\" id=\"easy\">Easy</div>\n               <div class=\"btn\" id=\"medium\">Medium</div>\n               <div class=\"btn\" id=\"hard\">Hard</div>\n            </div>`;\n    }\n    /**\r\n    * @author Gabriele Papa Benigno\r\n    * @description Aggiunge un gestore di eventi per il rendering della schermata delle impostazioni.\r\n    * @param {Function} handler - La funzione da eseguire quando si verifica un evento di rendering.\r\n    * @returns {void}\r\n    */ addHandlerRender(handler) {\n        console.log();\n        this._parentElement.addEventListener(\"click\", (e)=>{\n            // e.preventDefault();\n            console.log(e.target);\n            if (e.target.id === \"play\") handler(e.target);\n        });\n    }\n}\nvar $ad3ba75a30606f04$export$2e2bcd8739ae039 = new $ad3ba75a30606f04$var$displaySubmenu();\n\n\nfunction $64ac714357476a3a$var$controlDisplaySubmenu() {\n    $3eicb.setCurrentIndex(1);\n    const markup = (0, $ad3ba75a30606f04$export$2e2bcd8739ae039).render(true);\n}\n/**\r\n * @author Gabriele Papa Benigno\r\n * @description Inizializza tutti i gestori di eventi legati alla pagina principale\r\n * @returns {void}\r\n */ (function init() {\n    (0, $ad3ba75a30606f04$export$2e2bcd8739ae039).addHandlerRender($64ac714357476a3a$var$controlDisplaySubmenu);\n})();\n\n\n//# sourceMappingURL=tic-tac-toe.768849b6.js.map\n","/**\r\n * @author Shadow Shining\r\n * @version 1.0.0\r\n * @descrizione Modello dei dati per l'applicazione GameHUB.\r\n * Questo modello contiene tutte le informazioni necessarie per gestire l'account utente, le impostazioni del sito web, i dati dei giochi e altre informazioni rilevanti.\r\n */\r\nexport const data = {\r\n   /**\r\n    * @description Dati dell'utente\r\n    * Inizializzati con i valori predefiniti per un utente ospite.\r\n    */\r\n   userData: {\r\n      username: \"Guest\",\r\n      password: null,\r\n      email: null,\r\n      firstLogin: \"2023-10-01,12:00\",\r\n      lastLogin: \"2023-10-01,12:00\",\r\n      lastGame: null,\r\n      lastGameData: null,\r\n      totalTime: 0,\r\n      achievements: 0,\r\n      wins: 0,\r\n      losses: 0,\r\n      games: 0,\r\n      currentPage: 0,\r\n   },\r\n\r\n   /**\r\n    * @description Dati del sito web\r\n    * Inizializzati con i valori NON-modificabili per il sito web GameHUB.\r\n    */\r\n   website: {\r\n      name: \"GameHUB\",\r\n      description: \"A game hub for all your gaming needs.\",\r\n      version: \"1.0.0\",\r\n   },\r\n\r\n   /**\r\n    * @description Dati miei presenti nel sito web\r\n    */\r\n   me: {\r\n      myName: \"Shadow Shining\",\r\n      myEmail: \"craftiaentity@gmail.com\",\r\n      myWebsite: \"(maybe in the future)\",\r\n      myDescription: \"A dude who doesn't know what to do in life.\",\r\n      myAvatarPath: \"../Pictures/ShadowShining.png\",\r\n      myGitHub: \"https://github.com/Shadow557\",\r\n   },\r\n\r\n   /**\r\n    * @description Impostazioni del sito web\r\n    * Inizializzate con i valori predefiniti per il tema, i colori del titolo, del sottotitolo e dello sfondo.\r\n    * Queste impostazioni possono essere modificate dall'utente.\r\n    */\r\n   settings: {\r\n      theme: \"light\",\r\n      titleColor: [\"#ff0000\", \"#000000\"],\r\n      subtitleColor: [\"#000000\", \"#ff0000\"],\r\n      backgroundColor: [\"#ffffff\", \"#777777\"],\r\n   },\r\n\r\n   /**\r\n    * @description Dati dei giochi\r\n    * Suddivisi in minigiochi e giochi completi.\r\n    * I minigiochi sono giochi semplici e veloci, mentre i giochi completi sono giochi pi√π complessi e impegnativi.\r\n    * Entrambi i tipi di giochi hanno i dati all'interno di un proprio oggetto presente nei due array.\r\n    */\r\n   allGames: {\r\n      id: { category: \"minigames\", game: 0 },\r\n      minigames: [\r\n         {\r\n            name: \"Tic Tac Toe\",\r\n            icon: \"/Pictures/Guest.png\",\r\n            data: {\r\n               id: \"tic-tac-toe\",\r\n               description: \"A classic game of Tic Tac Toe.\",\r\n            },\r\n         },\r\n         {\r\n            name: \"2048\",\r\n            icon: \"Pictures/Guest.png\",\r\n            data: {\r\n               id: \"2048\",\r\n               description:\r\n                  \"A sliding puzzle game where the goal is to combine tiles with the same number.\",\r\n            },\r\n         },\r\n         {\r\n            name: \"Minesweeper\",\r\n            icon: \"Pictures/Guest.png\",\r\n            data: {\r\n               id: \"minesweeper\",\r\n               description:\r\n                  \"A classic puzzle game where the goal is to clear a minefield without detonating any mines.\",\r\n            },\r\n         },\r\n         {\r\n            name: \"Snake\",\r\n            icon: \"Pictures/Guest.png\",\r\n            data: {\r\n               id: \"snake\",\r\n               description:\r\n                  \"A classic arcade game where the player controls a snake that grows in length.\",\r\n            },\r\n         },\r\n         {\r\n            name: \"Sudoku\",\r\n            icon: \"Pictures/Guest.png\",\r\n            data: {\r\n               id: \"sudoku\",\r\n               description:\r\n                  \"A logic-based number placement puzzle where the goal is to fill a grid with numbers so that each column, row, and subgrid contains all the digits from 1 to 9.\",\r\n            },\r\n         },\r\n         {\r\n            name: \"Solitaire\",\r\n            icon: \"Pictures/Guest.png\",\r\n            data: {\r\n               id: \"solitaire\",\r\n               description:\r\n                  \"A card game where the goal is to move all cards to foundation piles in a specific order.\",\r\n            },\r\n         },\r\n      ],\r\n      games: [],\r\n   },\r\n};\r\n\r\n/**\r\n * @author Shadow Shining\r\n * @description Imposta l'indice corrente del gioco selezionato.\r\n * @param {int} index - L'indice del gioco da impostare.\r\n * Se l'indice √® inferiore a 0, viene impostato all'ultimo gioco.\r\n * Se l'indice √® maggiore o uguale alla lunghezza dell'array dei minigiochi, viene impostato al primo gioco.\r\n * @returns {void}\r\n */\r\nexport const setCurrentIndex = (index) => {\r\n   if (index < 0) {\r\n      data.allGames.id.game = data.allGames.minigames.length - 1; // Reset to last game if index is out of bounds\r\n      return;\r\n   } else if (index >= data.allGames.minigames.length) {\r\n      data.allGames.id.game = 0; // Reset to first game if index is out of bounds\r\n      return;\r\n   }\r\n\r\n   data.allGames.id.game = index;\r\n};\r\n\r\n/**\r\n * @author Shadow Shining\r\n * @description Ottiene l'oggetto del gioco corrente in base all'indice corrente.\r\n * @returns {Object} - L'oggetto del gioco corrente.\r\n */\r\nexport const getByCurrentIndex = () => {\r\n   const category = data.allGames.id.category;\r\n   const game = data.allGames.id.game;\r\n   // console.log(game, category); // DEBUG\r\n   // console.log(gameArr[0]); // DEBUG\r\n\r\n   return data.allGames[category][game];\r\n};\r\n","/**\r\n * @author Gabriele Papa Benigno\r\n * @description Classe base per la visualizzazione dei dati.\r\n * @returns {Display} - Un'istanza della classe Display.\r\n */\r\nexport default class Display {\r\n\t_data;\r\n\r\n\t/**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Crea un'istanza di Display.\r\n\t * @param {Array} data - I dati da visualizzare nella schermata.\r\n\t * @param {Booean} render - Se true, renderizza i dati nella schermata, altrimenti restituisce il markup generato.\r\n\t * @returns {void}\r\n\t */\r\n\trender(data, render = true) {\r\n\t\t// console.log(data.username); // DEBUG\r\n\t\t// Controlla se i dati sono validi\r\n\t\tif (!data || (Array.isArray(data) && data.length === 0))\r\n\t\t\treturn this.renderError();\r\n\r\n\t\t// console.log(data); // DEBUG\r\n\t\t// Aggiorna i dati della schermata e genera il markup\r\n\t\tthis._data = data;\r\n\t\tconst markup = this._generateMarkup();\r\n\r\n\t\t// Se render √® false, restituisce il markup generato senza modificarlo nella schermata\r\n\t\tif (!render) return markup;\r\n\r\n\t\t// Altrimenti, pulisce il contenuto del parentElement e inserisce il nuovo markup\r\n\t\tthis._clear();\r\n\t\t// console.log(this._parentElement);\r\n\t\tthis._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n\t\t// console.log(this);\r\n\t\t// console.log(this._parentElement.innerHTML.classList);\r\n\r\n\t\tthis._parentElement.classList.remove(\"hidden\");\r\n\t}\r\n\r\n\t/**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Crea il markup HTML da visualizzare nella schermata senza l'uso di dati.\r\n\t * @param {String} markup - Il markup HTML da inserire nel parentElement.\r\n\t * @param {Boolean0} render - Se true, renderizza il markup nella schermata, altrimenti termina senza fare nulla.\r\n\t * @returns {void}\r\n\t */\r\n\trenderFromMarkup(markup, render = true) {\r\n\t\t// Controlla se il markup √® valido\r\n\t\t// Se il markup √® vuoto o non valido, mostra un messaggio di errore\r\n\t\tif (!markup || markup.length === 0) return this.renderError();\r\n\r\n\t\t// Svuota il contenuto del parentElement e inserisce il nuovo markup\r\n\t\tthis._clear();\r\n\t\tthis._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n\r\n\t\t// Se render √® false, termina senza fare nulla\r\n\t\tif (!render) return;\r\n\r\n\t\t// Altrimenti, mostra il parentElement\r\n\t\tthis._parentElement.classList.remove(\"hidden\");\r\n\t}\r\n\r\n\t/**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description: Aggiorna i dati visualizzati nella schermata:\r\n\t * 1) I dati presenti nella schermata vengono aggiornati.\r\n\t * 2) Viene creato un nuovo Markup.\r\n\t * 3) Viene generato un nuovo DOM virtuale.\r\n\t * 4) Vengono raccolti in due array gli elementi del nuovo DOM virtuale + quelli di quello attuale.\r\n\t * 5) Attraverso un forEach viene fatto un controllo sugli elementi presenti negli array, se uno presente nell'array 'vecchio' non cambacia con quello aggiornato, esso viene sovrascritto, sia che sia soltanto il testo, sia che siano i suoi attributi.\r\n\t * @param {Array} data - I dati nuovi che andranno aggiornati sulla schermata.\r\n\t * @returns {void}\r\n\t */\r\n\tupdate(data) {\r\n\t\t// Controlla se i dati sono validi\r\n\t\t// Se i dati sono vuoti o non validi, mostra un messaggio di errore\r\n\t\tif (!data || (Array.isArray(data) && data.length === 0))\r\n\t\t\treturn this.renderError();\r\n\r\n\t\t// aggiorna i dati della schermata e genera il nuovo markup\r\n\t\tthis._data = data;\r\n\t\tconst newMarkup = this._generateMarkup();\r\n\r\n\t\t// Crea un nuovo DOM virtuale e raccoglie gli elementi\r\n\t\t// presenti nel nuovo markup e in quello attuale\r\n\t\tconst newDOM = document.createRange().createContextualFragment(newMarkup);\r\n\t\tconst newElements = Array.from(newDOM.querySelectorAll(\"*\"));\r\n\t\tconst curElements = Array.from(this._parentElement.querySelectorAll(\"*\"));\r\n\r\n\t\t// per ogni elemento nel nuovo DOM virtuale,\r\n\t\t// controlla se √® diverso da quello attuale\r\n\t\t// se √® diverso, aggiorna il testo e gli attributi dell'elemento attuale\r\n\t\t// altrimenti non fa nulla\r\n\t\tnewElements.forEach((newEl, i) => {\r\n\t\t\tconst curEl = curElements[i];\r\n\t\t\tif (\r\n\t\t\t\t!newEl.isEqualNode(curEl) &&\r\n\t\t\t\tnewEl.firstChild?.nodeValue.trim() !== \"\"\r\n\t\t\t) {\r\n\t\t\t\tcurEl.textContent = newEl.textContent;\r\n\t\t\t}\r\n\r\n\t\t\tif (!newEl.isEqualNode(curEl)) {\r\n\t\t\t\tArray.from(newEl.attributes).forEach((attr) =>\r\n\t\t\t\t\tcurEl.setAttribute(attr.name, attr.value)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Pulisce il contenuto del parentElement e mostra un messaggio di errore.\r\n\t * @param {String} message - Il messaggio di errore da visualizzare.\r\n\t * @return {void}\r\n\t */\r\n\trenderError(message = this._errorMessage) {\r\n\t\tconst markup = `\r\n      <div class=\"error\">\r\n        <h2>Error</h2>\r\n        <p>${message}</p>\r\n      </div>`;\r\n\r\n\t\tthis._parentElement.innerHTML = \"\";\r\n\t\tthis._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n\t}\r\n\r\n\t/**\r\n\t * @author Gabriele Papa Benigno\r\n\t * @description Pulisce il contenuto del parentElement.\r\n\t * @returns {void}\r\n\t */\r\n\t_clear() {\r\n\t\tthis._parentElement.innerHTML = \"\";\r\n\t}\r\n}\r\n","import * as model from \"../../model.js\";\r\nimport displaySubmenu from \"./Displays/displaySubmenu.js\";\r\n\r\nfunction controlDisplaySubmenu() {\r\n   model.setCurrentIndex(1);\r\n   const markup = displaySubmenu.render(true);\r\n}\r\n\r\n/**\r\n * @author Gabriele Papa Benigno\r\n * @description Inizializza tutti i gestori di eventi legati alla pagina principale\r\n * @returns {void}\r\n */\r\n(function init() {\r\n   displaySubmenu.addHandlerRender(controlDisplaySubmenu);\r\n})();\r\n","import Display from \"../../../mainDisplays/displayTemp.js\";\r\n\r\nclass displaySubmenu extends Display {\r\n   _parentElement = document.querySelector(\"#gameZone\");\r\n   _errorMessage = \"My info are not available. Sorry.\";\r\n\r\n   /**\r\n    * @author Gabriele Papa Benigno\r\n    * @description Crea il markup per visualizzare le informazioni che MI riguardano.\r\n    * @returns {String} - Il markup HTML generato.\r\n    */\r\n   _generateMarkup() {\r\n      return `\r\n            <div id=\"submenu\">\r\n               <h1 class=\"subtitle2\">Tic-Tac-Toe</h1>\r\n               <div class=\"btn\" id=\"easy\">Easy</div>\r\n               <div class=\"btn\" id=\"medium\">Medium</div>\r\n               <div class=\"btn\" id=\"hard\">Hard</div>\r\n            </div>`;\r\n   }\r\n\r\n   /**\r\n    * @author Gabriele Papa Benigno\r\n    * @description Aggiunge un gestore di eventi per il rendering della schermata delle impostazioni.\r\n    * @param {Function} handler - La funzione da eseguire quando si verifica un evento di rendering.\r\n    * @returns {void}\r\n    */\r\n   addHandlerRender(handler) {\r\n      console.log();\r\n      this._parentElement.addEventListener(\"click\", (e) => {\r\n         // e.preventDefault();\r\n         console.log(e.target);\r\n\r\n         if (e.target.id === \"play\") handler(e.target);\r\n      });\r\n   }\r\n}\r\nexport default new displaySubmenu();\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$25a0cb294ecc0d9a$export$4051a07651545597","$25a0cb294ecc0d9a$export$3ca1b55487bbd24f","$25a0cb294ecc0d9a$export$abf42a563be0e624","userData","username","password","email","firstLogin","lastLogin","lastGame","lastGameData","totalTime","achievements","wins","losses","games","currentPage","website","name","description","version","me","myName","myEmail","myWebsite","myDescription","myAvatarPath","myGitHub","settings","theme","titleColor","subtitleColor","backgroundColor","allGames","category","game","minigames","icon","data","index","length","$a80e6109b74e40fd$export$2e2bcd8739ae039","_data","render","Array","isArray","renderError","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","classList","remove","renderFromMarkup","update","newMarkup","newElements","from","newDOM","document","createRange","createContextualFragment","querySelectorAll","curElements","forEach","newEl","i","curEl","isEqualNode","firstChild","nodeValue","trim","textContent","attributes","attr","setAttribute","value","message","_errorMessage","innerHTML","$3eicb","$eqyEW","$ad3ba75a30606f04$var$displaySubmenu","default","querySelector","addHandlerRender","handler","console","log","addEventListener","target","$ad3ba75a30606f04$export$2e2bcd8739ae039","setCurrentIndex"],"version":3,"file":"tic-tac-toe.768849b6.js.map"}